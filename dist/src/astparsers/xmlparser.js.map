{"version":3,"file":"xmlparser.js","sourceRoot":"","sources":["../../../src/astparsers/xmlparser.ts"],"names":[],"mappings":"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","sourcesContent":["\nexport type bufferType = string | any\n\nexport interface XMLBuilder {\n  beginNode( name:string, buffer_index?:number )\n  setAttribute( name:string, value:bufferType, buffer_index?:number)\n  addTextNode( value:string, buffer_index?:number )\n  closeNode( name:string, buffer_index?:number )\n  eof()\n}\n\nfunction createDetector( strs:string[]) : (buff:string, index:number) => boolean {\n  let cached_detectors = new Array(256)\n  function cacheDetector(str) {\n    const cache_index = str.charCodeAt(0)\n    if(!cached_detectors[cache_index]) cached_detectors[cache_index] = []\n    cached_detectors[cache_index].push((buff:string, index:number) : boolean => {\n      if((buff.length - index) < str.length) return false\n      for(let i=0; i<str.length; i++) {\n        if(str.charCodeAt(i) != buff.charCodeAt(index + i)) return false\n      }\n      return true\n    })\n  }  \n  for( let s of strs ) {\n    cacheDetector(s)\n  }\n  return (buff:string, index:number) : boolean => {\n    const detectors = cached_detectors[buff.charCodeAt(index)]\n    if(detectors) {\n      for( let fn of detectors) {\n        if(fn(buff,index)) return true        \n      }\n    }\n    return false\n  }\n}\nconst isSelfClosingTag = createDetector(['area',\n  'base',\n  'br',\n  'col', \n  'command',\n  'embd',\n  'hr', \n  'img',\n  'input',\n  'keygen ',\n  'link',\n  'menuitem',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',  \n])\n\nconst isCommentStart = createDetector(['<!--'])\nconst isCommentEnd = createDetector(['-->'])\n\nexport class XMLParser  {\n\n  __len = 0\n  buff_index = 0\n  used_index = 0\n  parents = []\n  tag_depth = 0\n\n  // buffer and the index inside it\n  buff:bufferType\n  i = 0\n  eof = false\n\n  buffers:bufferType[]\n  last_finished = null\n\n  in_tagdef = false\n  is_selfclosing = false\n  last_tag_name = ''\n\n  constructor(initWith:string[]) {\n    this.buffers = initWith\n    this.buff = initWith[0]\n    this.i = 0\n    this.buff_index = 0\n    this.used_index = 0\n    this.eof = false\n    if(typeof(this.buff)==='undefined') this.eof = true\n  }\n\n  code ( index:number ) : number {\n    if( (this.buff_index & 1 ) && typeof(this.buff) != 'string') {\n      return 0\n    }\n    if(this.buff.length <= this.i + index ) {\n      const next = this.buffers[this.buff_index + 1]\n      if(typeof(next) != 'string') {\n        return 0\n      }\n      if(next) {\n        return next.charCodeAt( this.i + index - this.buff.length )\n      }\n      return 0\n    }        \n    return this.buff.charCodeAt( this.i + index )\n  }\n\n  here () : number {\n    if(typeof(this.buff) != 'string') return 0\n    return this.buff.charCodeAt( this.i )\n  }\n\n  isValueBlock() {\n    return ( (this.buff_index & 1 ) === 1)\n  }\n\n  isHere (value:number) : boolean {\n    return this.buff.charCodeAt( this.i ) == value\n  }  \n  step ( index:number ) : number {\n    this.i += index\n    this.used_index = this.buff_index\n    if(this.buff.length <= this.i ) {\n      this.i = this.i - this.buff.length\n      this.buff_index = this.buff_index + 1\n      this.used_index = this.buff_index\n      this.buff = this.buffers[ this.buff_index ]\n      if(typeof(this.buff) === 'undefined') {\n        this.eof = true\n        return 0\n      } else {\n        if(typeof(this.buff) != 'string') return 0\n        return this.buff.charCodeAt(0)\n      }\n    }\n    return this.buff.charCodeAt(this.i)\n  }   \n\n  stepBuffer() {\n    this.buff_index = this.buff_index + 1\n    this.used_index = this.buff_index\n    this.buff = this.buffers[ this.buff_index ]\n    this.i = 0\n    if(typeof(this.buff) === 'undefined') {\n      this.eof = true\n    }   \n  }\n\n  skipspace() {\n    if(this.isValueBlock()) return;    \n    let c = this.here()\n    while(!this.eof) {\n      if( c > 32 ) break;\n      c = this.step(1)\n      const b = this.buff as any\n      if( b instanceof drfmKey) {\n        this.stepBuffer()\n      }\n    }\n  }\n\n  isTagChar( c:number, first:boolean ) {\n    return (    ((c >= 65) && (c <= 90))     // A - Z\n    || ((c >= 97) && (c <= 122))    // a - z\n    || ( c == 95)                   // _\n    || ( c == 58)                   // :\n    || (!first && (c >= 48) && (c <= 57))     // 0 - 9\n    || (!first && c == 46)          // .\n    || (!first && c == 45)          // -\n   )\n  }\n\n  // collects a name like div or attribute name ( a bit simplified version )\n  collectXMLName () : string {\n    let sp = this.i;\n    let c = this.here()\n    let first = true\n    const start_buff = this.buff\n    while( !this.eof && this.isTagChar( c, first) ) {\n      c = this.step(1)\n      first = false\n    }\n    if(start_buff == this.buff) {\n      return this.buff.substring( sp, this.i )\n    }\n    return start_buff.substring( sp ) + this.buff.substring( 0, this.i )\n  } \n  \n  colllectText () : bufferType {\n\n    if(this.isValueBlock()) {\n      const v = this.buff\n      this.used_index = this.buff_index\n      this.buff_index++\n      this.buff = this.buffers[this.buff_index]\n      if(typeof(this.buff) === 'undefined') this.eof = true\n      this.i = 0\n      return v\n    }\n\n    let sp = this.i;\n    let c1 = this.here()\n    let c2 = this.code(1)\n\n    const start_buff = this.buff\n    let curr_buff = this.buff\n    const intermediate = []\n    let last_i = this.i\n    let did_step = false\n    // read text as long as not <c... or </...\n    while( !this.eof && ( !(  c1 == 60 &&  // \"<\"\n              ( (c2 == 47) || // \"/\"\n                this.isTagChar( c2, true ) || // valid tag char\n                (c2 == 33) ) ) )  // <! comment start...\n          ) {\n      if(curr_buff != this.buff) {\n        break\n      }     \n      if(c1===38) { // &\n        if(c2 ===35) { // #\n          // &#\n          intermediate.push( this.buff.substring( sp, this.i ) )\n          this.step(2)\n          const code = this.collectUntil(59)\n          const cc = parseInt('0' + code)\n          if(isNaN(cc)) {\n            intermediate.push( '&#'+code+';')\n          } else {\n            intermediate.push( String.fromCharCode(cc) )\n          }\n          this.step(1)\n          if(this.eof) break;          \n          c1 = this.code(0)\n          c2 = this.code(1)\n          sp = this.i\n          did_step = true\n        } else {\n          // named charater references...\n          // store what we have so far...\n          if( (c2 >= 65 && c2 <= 90) || ( c2 >= 97 && c2 <= 122) ) {\n            intermediate.push( this.buff.substring( sp, this.i ) )\n            this.step(1)\n            const name = this.collectUntil(59)\n            const cc = namedChars[name]\n            if(cc) {\n              intermediate.push( String.fromCharCode(cc) )\n            } else {\n              intermediate.push( '&'+name+';')\n            }\n            this.step(1)\n            if(this.eof) break;          \n            c1 = this.code(0)\n            c2 = this.code(1)\n            sp = this.i\n            did_step = true  \n          }\n        }\n      }  \n      if(!did_step) {\n        c1 = this.step(1)\n        if(this.eof) break;\n        c2 = this.code(1)    \n        if(this.eof) break;      \n        if(curr_buff != this.buff) {\n          break\n        }         \n      } \n      did_step = false     \n      curr_buff = this.buff\n    }\n    if(intermediate.length > 0) {\n      if(start_buff == this.buff) {\n        return intermediate.join('') + this.buff.substring( sp, this.i )\n      } else {\n        return intermediate.join('') + start_buff.substring( sp )\n      }\n    }\n    if(start_buff == this.buff) {\n      return this.buff.substring( sp, this.i )\n    }\n    return start_buff.substring( sp )\n  }   \n\n  skipUntil (fn) {\n    let curr_buff = this.buff\n    while( (false === fn(this.buff,this.i)) && !this.eof ) {\n      this.step(1)\n      if(curr_buff != this.buff) {\n        if(this.isValueBlock()) {\n          this.stepBuffer()\n        }\n      }\n      curr_buff = this.buff\n    }\n  }    \n\n  collectUntil (value) : string {\n    let sp = this.i;\n    let c = this.here()\n    const start_buff = this.buff\n    let curr_buff = this.buff\n    const intermediate = []\n    while( c != value && !this.eof ) {\n      c = this.step(1)\n      if(curr_buff != this.buff) {\n        intermediate.push(this.buff)\n      }\n      curr_buff = this.buff\n    }\n    if(start_buff == this.buff) {\n      return this.buff.substring( sp, this.i )\n    }\n    intermediate.pop() // remove last intermediate because it is this.buff\n    return start_buff.substring( sp ) + intermediate.join('') + this.buff.substring( 0, this.i )\n  }  \n\n  collectXMLAttributeValue () : bufferType {\n    this.skipspace()\n    if(this.isHere(61)) { // = \n      this.step(1)\n      this.skipspace()\n\n      // if the current buffer is...\n      // setAttributeFunction\n\n      if(typeof(this.buff) != 'string' || (this.isValueBlock())) {\n        const v = this.buff\n        this.used_index = this.buff_index\n        this.buff_index++\n        this.buff = this.buffers[this.buff_index]\n        if(typeof(this.buff) === 'undefined') this.eof = true\n        return v\n      }\n      const quoteChar = this.here()\n      if(quoteChar == 34 || quoteChar == 39) { // \"\n        this.step(1) \n        const value = this.collectUntil(quoteChar) // collect to the \"\n        this.step(1)\n        return value\n      } else {\n        return this.collectXMLName()\n      }\n    } \n    return ''\n  }  \n \n\n  // parse something that is meaningful imperatively and then create a callback\n  parse ( callback:XMLBuilder ) {\n    if(typeof(this.buff) === 'undefined') {\n      this.eof = true\n      callback.eof()\n      return\n    }    \n    let cc1 = 0;\n    let cc2 = 0;\n    while (!this.eof) {\n\n      if(typeof(this.buff) === 'string' && this.buff.length === 0 ) {\n        const idx = this.buff_index  \n        callback.addTextNode( '', idx )\n        this.stepBuffer()          \n        continue\n      }\n\n      cc1 = this.here()\n      if(this.in_tagdef) {\n        // <div  something = \"...\"\n        this.skipspace() \n        cc1 = this.here()\n\n        // if tag ends immediately like <div/> or <br/>\n        if(cc1 == 47 ) {  // \"/\" \n          this.step(2)\n          this.in_tagdef = false\n          callback.closeNode( this.last_tag_name, this.used_index )\n          return          \n        }\n        if( cc1 != 62 ) { // not \">\"\n          const name = this.collectXMLName()\n          const value = this.collectXMLAttributeValue()\n          callback.setAttribute( name, value, this.used_index )\n          return\n        }\n        // if \">\", check if self closing\n        if(this.is_selfclosing) {\n          // this.step(1)\n          // this.in_tagdef = false\n          callback.closeNode( this.last_tag_name, this.used_index )          \n        }\n        this.step(1)\n        this.in_tagdef = false\n        continue\n      }\n\n      if(this.isValueBlock()) {\n        const idx = this.buff_index\n        callback.addTextNode( this.colllectText(), idx )\n        continue\n      }\n      // <\n      if( cc1 == 60 ) {        \n        cc2 = this.code(1)\n        // </ tag is closing\n        if( cc2 == 47 ) {\n          this.step(2)\n          const tag = this.collectXMLName()\n          this.step(1)\n          callback.closeNode( tag, this.used_index )\n          return\n        }\n        if( this.isTagChar( cc2, true )) {\n          this.is_selfclosing = isSelfClosingTag(this.buff, this.i+1)\n          this.step(1)\n          this.in_tagdef = true\n          this.last_tag_name = this.collectXMLName()\n          callback.beginNode( this.last_tag_name, this.used_index )\n          return\n        }\n        if(isCommentStart(this.buff, this.i)) {\n          this.skipUntil( isCommentEnd )\n          this.step(3) // -->\n          continue\n        } \n      }\n      // > the div can be closing....\n      if(!this.eof) {\n        const idx = this.buff_index\n        callback.addTextNode( this.colllectText(), idx )\n      }\n      return\n    }    \n    callback.eof()\n  }\n}"]}